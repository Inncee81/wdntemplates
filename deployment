Preconditions:
Have the repository checked out and in a clean state (best to have nothing in the stash)
Have push access to a remote repo named "upstream" to https://github.com/unl/wdntemplates
Have an account on the unlcms production and staging servers (ssh)
Have node and grunt-cli (npm package) installed globally; may want to use NVM https://github.com/creationix/nvm
Staging Steps:
Log into the unlcms-staging server
Go to or create a checkout of the repo's develop branch, pulling in latest changes from upsteam
Manually edit files:
VERSION_DEP - bump to the next version with a -rc.1 suffix 
package.json - bump to the next version with a -rc.1 suffix
wdn/templates_4.1/includes/scriptsandstyles.html - change the server for the framework files to https://unlcms-staging.unl.edu/
Run the build steps - https://gist.github.com/kabel/275f94916529b21833aba725f736087b#file-staging-refresh-templates-sh
Conduct testing on various staging sites (may require cache flush)
Production Steps:
Draft all changelog https://github.com/unl/wdntemplates/blob/develop/CHANGELOG.md entries based on the committed changes between master and develop: https://github.com/unl/wdntemplates/compare/master...develop and commit
Run ./scripts/bump-version-and-release.sh (tags and pushes the release to upstream)
Log into the unlcms master file server
Switch to the wdntemplates user: sudo -u wdntemplates -s -H
Change to the wdntemplates home directory: cd
Run the build steps - https://gist.github.com/kabel/275f94916529b21833aba725f736087b#file-production-refresh-templates-sh (should be refresh-templates.sh)
Confirm that the new version appears in generated HTML